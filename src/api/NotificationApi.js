/**
 * Accounting API
 *
 * The version of the OpenAPI document: 8.3.8
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

export class NotificationApi {
  accounting;

  constructor(accounting) {
    this.accounting = accounting;
  }

  listNotificationPreferences(notification) {
    // verify the required parameter 'notification' is set
    if (notification === undefined || notification === null) {
      throw new Error(
        "Missing the required parameter 'notification' when calling listNotificationPreferences",
      );
    }

    let path = "/notifications/preferences/{notification}";
    path = path.replace("{notification}", notification);

    let options = {
      params: {},
      data: {},
    };

    return this.accounting.request("GET", path, options);
  }

  listNotifications(fields = null, page = null, perPage = null) {
    let path = "/notifications";

    let options = {
      params: {
        fields: fields,
        page: page,
        per_page: perPage,
      },
      data: {},
    };

    return this.accounting.request("GET", path, options);
  }

  sendNotification(sendNotificationRequest) {
    // verify the required parameter 'sendNotificationRequest' is set
    if (
      sendNotificationRequest === undefined ||
      sendNotificationRequest === null
    ) {
      throw new Error(
        "Missing the required parameter 'sendNotificationRequest' when calling sendNotification",
      );
    }

    let path = "/notifications/send";

    let options = {
      params: {},
      data: sendNotificationRequest,
    };

    return this.accounting.request("POST", path, options);
  }

  updateNotificationPreferences(
    notification,
    updateNotificationPreferencesRequest,
  ) {
    // verify the required parameter 'notification' is set
    if (notification === undefined || notification === null) {
      throw new Error(
        "Missing the required parameter 'notification' when calling updateNotificationPreferences",
      );
    }

    // verify the required parameter 'updateNotificationPreferencesRequest' is set
    if (
      updateNotificationPreferencesRequest === undefined ||
      updateNotificationPreferencesRequest === null
    ) {
      throw new Error(
        "Missing the required parameter 'updateNotificationPreferencesRequest' when calling updateNotificationPreferences",
      );
    }

    let path = "/notifications/preferences/{notification}";
    path = path.replace("{notification}", notification);

    let options = {
      params: {},
      data: updateNotificationPreferencesRequest,
    };

    return this.accounting.request("PUT", path, options);
  }
}
