/**
 * Accounting API
 *
 * The version of the OpenAPI document: 8.3.5
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import MockAdapter from "axios-mock-adapter";
import axios from "axios";
import { Accounting } from "../../src/index.js";

let mock = new MockAdapter(axios);

describe("AuthApi", function () {
  describe("authInit", function () {
    it("should call authInit successfully", function (done) {
      let path = "/auth/init";

      mock.onAny(path).reply(200, {});
      let accounting = new Accounting(
        "fake-token",
        "https://fake-endpoint.accounting.sh",
      );
      accounting.auth
        .authInit()
        .then(() => {
          done();
        })
        .catch(() => {
          done(false);
        });
    });
  });
  describe("login", function () {
    it("should call login successfully", function (done) {
      let path = "/auth/login";

      mock.onAny(path).reply(200, {});
      let accounting = new Accounting(
        "fake-token",
        "https://fake-endpoint.accounting.sh",
      );
      accounting.auth
        .login({})
        .then(() => {
          done();
        })
        .catch(() => {
          done(false);
        });
    });
  });
  describe("logout", function () {
    it("should call logout successfully", function (done) {
      let path = "/auth/logout";

      mock.onAny(path).reply(200, {});
      let accounting = new Accounting(
        "fake-token",
        "https://fake-endpoint.accounting.sh",
      );
      accounting.auth
        .logout()
        .then(() => {
          done();
        })
        .catch(() => {
          done(false);
        });
    });
  });
  describe("switchCompany", function () {
    it("should call switchCompany successfully", function (done) {
      let path = "/auth/switch";

      mock.onAny(path).reply(200, {});
      let accounting = new Accounting(
        "fake-token",
        "https://fake-endpoint.accounting.sh",
      );
      accounting.auth
        .switchCompany({})
        .then(() => {
          done();
        })
        .catch(() => {
          done(false);
        });
    });
  });
});
